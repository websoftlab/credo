{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"title": "JSON schema for CredoJS credo.json files",
	"type": "object",
	"definitions": {
		"SSRProperty": {
			"description": "Enable or disable server-side rendering, used in conjunction with the renderDriver property",
			"type": "boolean"
		},
		"BootloaderProperty": {
			"description": "Bootloader script (runs on server side)",
			"$ref": "#/definitions/Handler"
		},
		"BootstrapProperty": {
			"description": "Bootstrap script (runs on client side)",
			"$ref": "#/definitions/Handler"
		},
		"DirectoryPath": {
			"oneOf": [
				{
					"description": "If true, directory path is equivalent to property name",
					"enum": [
						true
					]
				},
				{
					"description": "Local directory path",
					"type": "string"
				}
			]
		},
		"Handler": {
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "object",
					"properties": {
						"path": {
							"type": "string"
						},
						"importer": {
							"type": "string"
						},
						"options": {
							"type": "object"
						}
					},
					"required": [
						"path"
					]
				}
			]
		},
		"Cluster": {
			"type": "object",
			"properties": {
				"id": {
					"description": "Unique thread ID",
					"type": "string"
				},
				"mode": {
					"description": "Server launch mode (application or cron)",
					"type": "string",
					"enum": [
						"app",
						"cron"
					]
				},
				"count": {
					"description": "Number of threads",
					"type": "number",
					"minimum": 1
				},
				"ssr": {
					"$ref": "#/definitions/SSRProperty"
				},
				"public": {
					"description": "Public files directory",
					"type": "string"
				},
				"bootloader": {
					"$ref": "#/definitions/BootloaderProperty"
				},
				"bootstrap": {
					"$ref": "#/definitions/BootstrapProperty"
				},
				"env": {
					"description": "Environment Variables",
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				},
				"renderOptions": {
					"description": "Render driver options",
					"type": "object"
				}
			},
			"required": [
				"id"
			]
		},
		"LexiconExcludeIncludeType": {
			"oneOf": [
				{
					"type": "string"
				},
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"type": {
							"type": "string",
							"enum": [
								"lambda",
								"data",
								"all"
							]
						}
					},
					"required": [
						"name"
					]
				}
			]
		},
		"LexiconOption": {
			"description": "Language options",
			"type": "object",
			"properties": {
				"language": {
					"description": "Default language",
					"type": "string"
				},
				"languages": {
					"description": "List of available language packs",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"multilingual": {
					"description": "Multilingual service",
					"type": "boolean"
				},
				"exclude": {
					"description": "Excluded packages and package options, property not used with <include> property",
					"$ref": "#/definitions/LexiconExcludeIncludeType"
				},
				"include": {
					"description": "Included packages and package options, property not used with <exclude> property",
					"$ref": "#/definitions/LexiconExcludeIncludeType"
				},
				"route": {
					"description": "Dynamic Language Routing",
					"type": "object",
					"properties": {
						"method": {
							"description": "HTTP method (GET or POST)",
							"type": "string",
							"enum": [
								"GET", "POST", "get", "post"
							]
						},
						"path": {
							"description": "URL pattern path for parser @credo-js/path-to-pattern",
							"type": "string"
						},
						"service": {
							"description": "Language service",
							"type": "string"
						}
					},
					"required": [
						"path",
						"service"
					]
				},
				"packages": {
					"description": "List of language pack groups",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"language"
			]
		}
	},
	"properties": {
		"dependencies": {
			"description": "Plugin dependencies (from npm packages)",
			"type": "array",
			"items": {
				"description": "The name of the package",
				"type": "string",
				"minLength": 1,
				"pattern": "^(?:@[a-z0-9-*~][a-z0-9-*._~]*/)?[a-z0-9-~][a-z0-9-._~]*(?:@.+?)?$"
			}
		},
		"public": {
			"description": "Public files directory",
			"$ref": "#/definitions/DirectoryPath"
		},
		"lexicon": {
			"description": "Lexicon files directory",
			"$ref": "#/definitions/DirectoryPath"
		},
		"config": {
			"description": "Configuration files directory",
			"$ref": "#/definitions/DirectoryPath"
		},
		"bootloader": {
			"$ref": "#/definitions/BootloaderProperty"
		},
		"bootstrap": {
			"$ref": "#/definitions/BootstrapProperty"
		},
		"middleware": {
			"description": "Koa Middleware Functions",
			"type": "array",
			"items": {
				"$ref": "#/definitions/Handler"
			}
		},
		"extraMiddleware": {
			"description": "Koa Extra-Middleware Functions",
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Handler"
			}
		},
		"responders": {
			"description": "Additional Responder Packages",
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Handler"
			}
		},
		"cmd": {
			"description": "Command Line Functions",
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Handler"
			}
		},
		"services": {
			"description": "Service objects and functions",
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Handler"
			}
		},
		"controllers": {
			"description": "Controller objects and functions",
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Handler"
			}
		},
		"hooks": {
			"description": "Hook Functions",
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Handler"
			}
		},
		"options": {
			"description": "Root options used only for the main package!",
			"type": "object",
			"properties": {
				"clusters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Cluster"
					}
				},
				"ssr": {
					"$ref": "#/definitions/SSRProperty"
				},
				"lexicon": {
					"$ref": "#/definitions/LexiconOption"
				},
				"configLoaders": {
					"description": "Additional modules for global configuration files",
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/Handler"
					}
				},
				"renderDriver": {
					"description": "HTML rendering driver for @credo-js/responder-page responder package",
					"oneOf": [
						{
							"type": "string"
						},
						{
							"enum": [
								false
							]
						}
					]
				},
				"renderOptions": {
					"description": "Render driver options",
					"type": "object"
				},
				"onBuildTimeout": {
					"description": "Timeout for onBuild hook functions",
					"type": [
						"string",
						"number"
					]
				},
				"daemon": {
					"description": "Server daemon options",
					"type": "object",
					"properties": {
						"killSignal": {
							"description": "KILL signal for stop command",
							"type": "string",
							"enum": [
								"SIGABRT",
								"SIGALRM",
								"SIGBUS",
								"SIGCHLD",
								"SIGCONT",
								"SIGFPE",
								"SIGHUP",
								"SIGILL",
								"SIGINT",
								"SIGKILL",
								"SIGPIPE",
								"SIGPOLL",
								"SIGPROF",
								"SIGQUIT",
								"SIGSEGV",
								"SIGSTOP",
								"SIGSYS",
								"SIGTERM",
								"SIGTRAP",
								"SIGTSTP",
								"SIGTTIN",
								"SIGTTOU",
								"SIGUSR1",
								"SIGUSR2",
								"SIGURG",
								"SIGVTALRM",
								"SIGXCPU",
								"SIGXFSZ",
								"SIGWINCH"
							]
						},
						"delay": {
							"description": "Time between CPU data samples in microseconds",
							"type": "number",
							"minimum": 3000,
							"maximum": 300000
						},
						"cpuPoint": {
							"description": "Number of processor data save points",
							"type": "number",
							"minimum": 10,
							"maximum": 2000
						},
						"pid": {
							"description": "PID file (JSON format)",
							"type": "string"
						}
					}
				}
			}
		}
	}
}